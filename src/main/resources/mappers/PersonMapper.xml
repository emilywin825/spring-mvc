<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace에는 인터페이스 풀 네임(패키지 + 인터페이스 이름)-->
<mapper namespace="com.spring.mvc.mybatis.PersonMapper">

<!--  SQL 작성 : 추상메서드 별로 작성  -->

<!--  id에는 추상메서드 이름을 적음 (save는 쿼리문에서 insert이니까 <insert>)-->
    <insert id="save">
        INSERT INTO person
            (person_name, person_age)
        VALUES (#{personName},#{personAge})
<!--    VALUES  안에는 가져올 필드명과 동일하게 작성    -->
    </insert>

<update id="change">
    UPDATE person
    SET person_name=#{personName}, person_age=#{personAge}
    WHERE id = #{id}
</update>

<!--   객체가 들어오면 필드명을 쓰고, 일반 데이터타입은 그냥 변수명 작성-->
<delete id="remove">
    DELETE FROM person
    WHERE id=#{id}
</delete>

<!--  ORM : 자바객체 필드랑 테이블 컬럼을 매핑  -->
    <resultMap id="person" type="com.spring.mvc.jdbc.Person">
<!--db랑 이름 다른것만 작성하면 됨 / 근데 이것도 이렇게 작성안하고 설정으로 해결할 수 있음-->
        <result property="personName" column="person_name"/>
        <result property="personAge" column="person_age"/>
    </resultMap>
<select id="findAll" resultMap="person"> <!--  resultMap은 위의 <<resultMap id="person"> 이거랑 동일하게 작성 -->

    SELECT * FROM person
</select>
<!--  select 했을 때 하나나오면 그냥 리턴하고 여러개 나오면 알아서 list에 담아서 리턴함  -->
<select id="findOne" resultMap="person">
    SELECT * FROM person
     WHERE id=#{id}
</select>




</mapper>